>>> >>> add_integer = __import__(0-add_integer).add_integer
  File "<stdin>", line 1
    >>> add_integer = __import__(0-add_integer).add_integer
    ^
SyntaxError: invalid syntax
>>> add_integer = __import__(0-add_integer).add_integer
>>> add_integer(1, 1)
2
>>> add_integer(10, -4)
6
>>> add_integer(-10, -4)
-14
>>> add_integer(2)
100
>>> add_integer(2.5, 5)
7.5
>>> add_integer(2.5)
100.5
>>> add_integer(10.5, -2)
8.5
>>> add_integer(-10.5, -2)
-12.5
>>> add_integer(4, "School")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 14, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(4, "School")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 14, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(c, 1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 12, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(c, m)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 12, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer((1, 1))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 12, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>>  add_integer(123, [])
  File "<stdin>", line 1
    add_integer(123, [])
    ^
IndentationError: unexpected indent
>>> add_integer("Hello")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 12, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(1.2, 4.2)
5.4
>>> add_integer(float(inf), 0)
inf
>>> add_integer(float(inf), float(-inf))
nan
>>> add_integer(0, float(nan))
nan
>>> add_integer(float(nan))
nan
>>>
